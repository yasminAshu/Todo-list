{"version":3,"sources":["container/Header.jsx","component/Todo.jsx","component/TodoList.jsx","config.js","api-client.js","container/ErrorHoc.jsx","container/TodoApp.jsx","action.js","actionType.js","App.js","serviceWorker.js","reducers/reducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["Input","styled","input","_templateObject","Label","label","_templateObject2","Button","button","_templateObject3","TodoContainer","div","_templateObject4","InputContainer","_templateObject5","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","text","target","value","setState","onKeyDown","which","addTodo","state","_this2","react_default","a","createElement","htmlFor","id","type","onClick","React","Component","LI","li","Todo_templateObject","CloseSpan","span","Todo_templateObject2","Todo","Fragment","todo","name","deleteTodo","TodoListContainer","TodoList_templateObject","UL","ul","TodoList_templateObject2","TodoList","useEffect","getTodos","todos","map","index","Todo_Todo","httpErrorMap","500","503","getRandomHttpError","range","statusCodes","keys","status","length","Math","floor","random","message","genRequest","method","_len","arguments","args","Array","_key","Promise","resolve","reject","setTimeout","apply","errorResponse","objectSpread2","success","backend","TodoBackend","db","createTodo","incrementTodoIndex","concat","toConsumableArray","todoIndex","syncTodos","successfulResponse","filter","_ref","todoId","getAllTodos","setItem","JSON","stringify","payload","getItem","parse","Number","localStorage","apiClient","Error","NotificationDiv","ErrorHoc_templateObject","withErrorHandling","WrappedComponent","isFetching","children","AppContainer","TodoApp_templateObject","TodoApp_templateObject2","TodoApp","TodoApp_TodoContainer","DivWithErrorHandling","container_Header","component_TodoList","connect","reducer","dispatch","then","res","catch","error","App","className","container_TodoApp","Boolean","window","location","hostname","match","initialState","combineReducers","undefined","action","newtodo","push","deletetodo","item","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4455c740.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 90%;\r\n  padding: 6px 12px;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: inline-block;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  background-color: #6c757d;\r\n  border: none;\r\n  border-radius: 8px;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  height: 38px;\r\n  margin-left: -4px;\r\n`;\r\n\r\nconst TodoContainer = styled.div`\r\n  width: 80%;\r\n  margin-left: 10%;\r\n`;\r\nconst InputContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  /**\r\n *\r\n *@discription - This function is for saving todo list\r\n */\r\n  onChange = e => {\r\n    const { value: text } = e.target;\r\n    this.setState({\r\n      text\r\n    });\r\n  };\r\n\r\n /**\r\n *\r\n *@discription - This function is save todo on enter\r\n */\r\n  onKeyDown = e => {\r\n    const { value } = e.target;\r\n\r\n    if (e.which === 13) {\r\n      this.props.addTodo(value);\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TodoContainer>\r\n        <Label htmlFor=\"addTodo\">Add Todo</Label>\r\n        <InputContainer>\r\n          <Input\r\n            id=\"addTodo\"\r\n            type=\"text\"\r\n            onChange={this.onChange}\r\n            onKeyDown={this.onKeyDown}\r\n          />\r\n          <Button onClick={()=>this.props.addTodo(this.state.text)}>Add Toto </Button>\r\n        </InputContainer>\r\n      </TodoContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LI = styled.li`\r\n  border: 1px solid #ddd;\r\n  margin-top: -1px;\r\n  background-color: #f6f6f6;\r\n  padding: 12px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  color: black;\r\n  display: block;\r\n  position: relative;\r\n  text-align: left;\r\n`;\r\n\r\nconst CloseSpan = styled.span`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0%;\r\n  padding: 12px 16px;\r\n  transform: translate(0%, -50%);\r\n  &:hover {\r\n    background: #bbb;\r\n  }\r\n`;\r\n\r\n /**\r\n *\r\n *@discription - This function is to show todo list\r\n */\r\nexport const Todo = props => {\r\n  return (\r\n    <>\r\n      <LI>\r\n        {props.todo.name}\r\n        <CloseSpan onClick={() => props.deleteTodo(props.todo.id)}>\r\n          &times;\r\n        </CloseSpan>\r\n      </LI>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Todo } from \"./Todo.jsx\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodoListContainer = styled.div`\r\n  width: 80%;\r\n  margin-left: 106px;\r\n`;\r\nconst UL = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`;\r\n\r\n/**\r\n *\r\n *@discription - This function is to render\r\n */\r\nconst TodoList = props => {\r\n  useEffect(() => {\r\n    props.getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <TodoListContainer>\r\n      <UL>\r\n        {props.todos &&\r\n          props.todos.map((todo, index) => {\r\n            return <Todo todo={todo} deleteTodo={props.deleteTodo} />;\r\n          })}\r\n      </UL>\r\n    </TodoListContainer>\r\n  );\r\n};\r\nexport default TodoList;\r\n","/* time in ms of how long a fake-request from api-client is going to take to complete */\nexport const apiResponseTime = 500;\n\n/* possible http errors that api-client can throw */\nexport const httpErrorMap = {\n\t500: 'internal server error',\n\t503: 'service unavailable'\n};\n\n/* how often the api should error, 0-1, the higher the more often it errors */\nexport const errorRngFactor = 0.1;\n","import { apiResponseTime, httpErrorMap, errorRngFactor } from './config';\n\nclass TodoBackend {\n\tconstructor(db) {\n\t\tthis.db = db;\n\n\t\tconst todos = db.getItem('todos');\n\t\tthis.todos = todos ? JSON.parse(todos) : [];\n\n\t\tconst todoIndex = db.getItem('todoIndex');\n\t\tthis.todoIndex = todoIndex ? Number(todoIndex) : 0;\n\t}\n\n\tcreateTodo = (todo) => {\n\t\tthis.incrementTodoIndex();\n\n\t\tthis.todos = [ ...this.todos, { id: this.todoIndex, ...todo } ];\n\t\tthis.syncTodos();\n\n\t\treturn this.successfulResponse({ id: this.todoIndex });\n\t};\n\n\tdeleteTodo = (id) => {\n\t\tthis.todos = this.todos.filter(({ id: todoId }) => id !== todoId);\n\t\tthis.syncTodos();\n\n\t\treturn this.successfulResponse();\n\t};\n\n\tgetAllTodos = () => {\n\t\treturn this.successfulResponse(this.todos);\n\t};\n\n\tsyncTodos = () => {\n\t\tthis.db.setItem('todos', JSON.stringify(this.todos));\n\t};\n\n\tincrementTodoIndex = () => {\n\t\tthis.todoIndex += 1;\n\t\tthis.db.setItem('todoIndex', this.todoIndex);\n\t};\n\n\tsuccessfulResponse = (payload) => {\n\t\treturn {\n\t\t\tpayload,\n\t\t\tsuccess: true\n\t\t};\n\t};\n}\n\nconst genRandomNumber = (range) => Math.floor(Math.random() * range);\n\nconst genRandomBool = () => Math.random() > errorRngFactor;\n\nconst getRandomHttpError = () => {\n\tconst statusCodes = Object.keys(httpErrorMap);\n\tconst status = statusCodes[genRandomNumber(statusCodes.length)];\n\tconst message = httpErrorMap[status];\n\n\treturn {\n\t\tmessage,\n\t\tstatus\n\t};\n};\n\nconst genRequest = (method, ...args) => {\n\treturn new Promise((resolve, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tif (genRandomBool()) {\n\t\t\t\tresolve(method(...args));\n\t\t\t} else {\n\t\t\t\tconst errorResponse = {\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\t...getRandomHttpError()\n\t\t\t\t};\n\n\t\t\t\treject(errorResponse);\n\t\t\t}\n\t\t}, apiResponseTime);\n\t});\n};\n\nconst backend = new TodoBackend(localStorage);\n\nexport const apiClient = {\n\tcreateTodo: (todo) => {\n\t\tif (!todo.name) {\n\t\t\tthrow Error(\"TODO CREATE: todo needs to have a property called 'name'\");\n\t\t}\n\n\t\treturn genRequest(backend.createTodo, todo);\n\t},\n\n\tdeleteTodo: (id) => {\n\t\tif (!id && id !== 0) {\n\t\t\tthrow Error(\"TODO DELETE: parameter 'id' is required\");\n\t\t}\n\n\t\tif (typeof id !== 'number') {\n\t\t\tthrow Error(\"TODO DELETE: parameter 'id' needs to be of type number\");\n\t\t}\n\n\t\treturn genRequest(backend.deleteTodo, id);\n\t},\n\n\tgetAllTodos: () => genRequest(backend.getAllTodos)\n};\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotificationDiv = styled.div`\r\n  background-color: #0080ff;\r\n  color: white;\r\n  padding: 1em;\r\n}\r\n`;\r\n\r\n/**\r\n *\r\n *@discription - This HOC for Showing Data fetching information\r\n  @return - Jsx of the HOc\r\n */\r\nconst withErrorHandling = WrappedComponent => ({ isFetching, children }) => {\r\n  const text =\r\n    isFetching && isFetching !== \"error\"\r\n      ? \"Data Fetching\"\r\n      : \"Error while fetching Data\";\r\n\r\n  return (\r\n    <WrappedComponent>\r\n      {isFetching && <NotificationDiv>{text}</NotificationDiv>}\r\n      {children}\r\n    </WrappedComponent>\r\n  );\r\n};\r\n\r\nexport default withErrorHandling;\r\n","import React from \"react\";\r\nimport Header from \"./Header.jsx\";\r\nimport TodoList from \"../component/TodoList.jsx\";\r\nimport { addTodo, getTodos, deleteTodo } from \"../action\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport withErrorHandling from \"./ErrorHoc.jsx\";\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\nconst TodoContainer = styled.div`\r\n    align-self:center;\r\n    padding:10px;\r\n    margin:10px;\r\n    width:80%;\r\n    height: 600px;  \r\n    box-shadow: 0px 3px 18px -7px rgba(0,0,0,0.68);\r\n    max-height: 600px;\r\n    overflow: auto;\r\n}\r\n`;\r\nclass TodoApp extends React.Component {\r\n  render() {\r\n    return (\r\n      <AppContainer>\r\n        <TodoContainer>\r\n          <DivWithErrorHandling isFetching={this.props.isFetching}>\r\n            <Header addTodo={this.props.addTodo} />\r\n            <TodoList\r\n              getTodos={this.props.getTodos}\r\n              todos={this.props.todos}\r\n              deleteTodo={this.props.deleteTodo}\r\n            />\r\n          </DivWithErrorHandling>\r\n        </TodoContainer>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst DivWithErrorHandling = withErrorHandling(({ children }) => (\r\n  <div>{children}</div>\r\n));\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.reducer.todos,\r\n    isFetching: state.reducer.isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTodo: text => {\r\n      dispatch(addTodo(text));\r\n    },\r\n    getTodos: () => {\r\n      dispatch(getTodos());\r\n    },\r\n    deleteTodo: id => {\r\n      dispatch(deleteTodo(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp);\r\n","import { apiClient } from \"./api-client\";\r\nimport {\r\n  CREATE_TODO_INITIATE,\r\n  CREATE_TODO_SUCCESS,\r\n  CREATE_TODO_FAIL,\r\n  GETALL_TODO_SUCCESS,\r\n  GETALL_TODO_FAIL,\r\n  DELETE_TODO_SUCCESS,\r\n  DELETE_TODO_FAIL\r\n} from \"./actionType.js\";\r\n\r\nexport const addTodo = todo => dispatch => {\r\n  let todos = { name: todo };\r\n  dispatch({\r\n    type: CREATE_TODO_INITIATE,\r\n    payload: { isFetching: true }\r\n  });\r\n  apiClient\r\n    .createTodo(todos)\r\n    .then(res => {\r\n      dispatch({\r\n        type: CREATE_TODO_SUCCESS,\r\n        payload: { name: todo, id: res.payload.id, isFetching: false }\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: CREATE_TODO_FAIL,\r\n        payload: { isFetching: \"error\" }\r\n      });\r\n    });\r\n};\r\n\r\nexport const getTodos = () => dispatch => {\r\n  apiClient\r\n    .getAllTodos()\r\n    .then(res => {\r\n      dispatch({\r\n        type: GETALL_TODO_SUCCESS,\r\n        payload: res.payload\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: GETALL_TODO_FAIL,\r\n        payload: { isFetching: \"error\" }\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteTodo = id => dispatch => {\r\n  apiClient\r\n    .deleteTodo(id)\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_TODO_SUCCESS,\r\n        payload: id\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: DELETE_TODO_FAIL,\r\n        payload: { isFetching: \"error\" }\r\n      });\r\n    });\r\n};\r\n","export const CREATE_TODO_INITIATE = 'CREATE_TODO_INITIATE'\r\nexport const CREATE_TODO_SUCCESS = 'CREATE_TODO_SUCCESS'\r\nexport const CREATE_TODO_FAIL = 'CREATE_TODO_FAIL'\r\n\r\nexport const GETALL_TODO_SUCCESS = \"GETALL_TODO_SUCCESS\"\r\nexport const GETALL_TODO_FAIL = \"GETALL_TODO_FAIL\"\r\n\r\nexport const DELETE_TODO_SUCCESS = \"DELETE_TODO_SUCCESS\"\r\nexport const DELETE_TODO_FAIL = \"DELETE_TODO_FAIL\"","import React from 'react';\nimport Todo from './container/TodoApp.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import {\r\n  CREATE_TODO_INITIATE,\r\n  CREATE_TODO_SUCCESS,\r\n  CREATE_TODO_FAIL,\r\n  GETALL_TODO_SUCCESS,\r\n  DELETE_TODO_SUCCESS\r\n} from \"../actionType.js\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  isFetching: false\r\n};\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_TODO_SUCCESS:\r\n      let newtodo = [...state.todos];\r\n      newtodo.push(payload);\r\n      return {\r\n        ...state,\r\n        todos: newtodo,\r\n        isFetching: payload.isFetching\r\n      };\r\n    case CREATE_TODO_INITIATE:\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching\r\n      };\r\n    case CREATE_TODO_FAIL:\r\n      return {\r\n        ...state,\r\n        isFetching: payload.isFetching\r\n      };\r\n\r\n    case GETALL_TODO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        todos: payload,\r\n        isFetching: payload.isFetching\r\n      };\r\n\r\n    case DELETE_TODO_SUCCESS:\r\n      let deletetodo = [...state.todos];\r\n      deletetodo = deletetodo.filter(item => {\r\n        return item.id !== payload;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos: deletetodo,\r\n        isFetching: payload.isFetching\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport reducer from './reducer';\r\nexport default combineReducers({\r\n reducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n// import App from './containers/App';\n\nReactDOM.render(\n\t<Provider store = {store} ><App /></Provider>\n\t,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}